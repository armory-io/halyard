FROM python:3.7-alpine3.12

MAINTAINER engineering@armory.io

ENV KUBECTL_RELEASE=1.17.7
ENV AWS_CLI_VERSION=1.18.109
ENV AWS_AIM_AUTHENTICATOR_VERSION=0.4.0
ENV GOOGLE_CLOUD_SDK_VERSION=313.0.1
ENV PATH "$PATH:/usr/local/bin/:/opt/google-cloud-sdk/bin/:/usr/local/bin/aws-iam-authenticator"

# python2 is still needed by aws-cli
RUN apk add --update --upgrade \
    bash \
    bash-completion \
    openjdk11-jre \
    curl \
    groff \
    less \
    mailcap \
    vim \
    wget \
    && pip install --upgrade awscli==${AWS_CLI_VERSION} s3cmd==2.0.1 python-magic \
    && pip uninstall -y pip

RUN apk update \
    && apk upgrade \
    && rm -rf /var/cache/apk/* \
    && apk add musl=1.1.24-r10 \
    && apk add krb5-libs=1.18.3-r0

# Google cloud SDK with anthos removed for CVE and because we don't need it
RUN wget -nv https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GOOGLE_CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \
  && mkdir -p /opt && cd /opt \
  && tar -xzf /google-cloud-sdk-${GOOGLE_CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \
  && rm /google-cloud-sdk-${GOOGLE_CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \
  && CLOUDSDK_PYTHON="python3" /opt/google-cloud-sdk/install.sh --usage-reporting=false --bash-completion=false  --additional-components app-engine-java app-engine-go \
  && rm -rf ~/.config/gcloud \
  && gcloud components remove --quiet anthoscli \
  && rm -rf /opt/google-cloud-sdk/.install/.backup

# kubectl + AWS IAM authenticator
RUN wget https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_RELEASE}/bin/linux/amd64/kubectl \
  && chmod +x kubectl \
  && mv ./kubectl /usr/local/bin/kubectl \
  && wget -O aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v${AWS_AIM_AUTHENTICATOR_VERSION}/aws-iam-authenticator_${AWS_AIM_AUTHENTICATOR_VERSION}_linux_amd64 \
	&& chmod +x ./aws-iam-authenticator \
	&& mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator


COPY halyard-web/build/install/halyard /opt/halyard

COPY ./install/docker/halyard.yml /opt/spinnaker/config/

RUN echo '#!/usr/bin/env bash' | tee /usr/local/bin/hal > /dev/null && \
  echo '/opt/halyard/bin/hal "$@"' | tee -a /usr/local/bin/hal > /dev/null

RUN chmod +x /usr/local/bin/hal

RUN adduser -D -S spinnaker

# setup bash for users
COPY ./install/docker/.bashrc /root/.bashrc
RUN hal --print-bash-completion > /usr/share/bash-completion/completions/hal

USER spinnaker
COPY ./install/docker/.bashrc /home/spinnaker/.bashrc
CMD ["/opt/halyard/bin/halyard"]
